# Properties file defining values required for launching the msie browser.
# 
# Selenium offers different supported behavior for firefox, chrome, and msie.
# Not all DesiredCapababilites are supported by all browsers. See the SeleniumHQ
# online documentation for DesiredCapabilities class for more information.

# GLOBAL PROPERITES
# Desired Capabilities that apply to all browsers at startup time.

# Native Events (Global)
# Determines whether the session is capable of generating native events when simulating
# user input.
ie.native.events=true
ff.native.events=false
chr.native.events=false
 
# BROWSER DRIVER PATH
chr.driver.executable.path=C:/sw/seleniumdrivers/chrome/chromedriver.exe
ie32.driver.executable.path=C:/sw/seleniumdrivers/msie32b/IEDriverServer.exe
ie64.driver.executable.path=C:/sw/seleniumdrivers/msie64b/IEDriverServer.exe

# MSIE-BROWSER-SPECIFIC PROPERTIES
# Enable Persistent Hover (IE Only)
# Persistent hovering is achieved by continuously firing mouse-over events at the
# last location the mouse cursor has been moved to. Default = true
ie.enable.persistent.hover=false

# Ensure Clean Session (IE Only)
# When set to true, the browser is cleared of cache, cookies, history, form data
# at startup.Note that this clears the cache of ALL currently running instances 
# of MSIE (manual and automated).
ie.ensure.clean.session=true

# Require Window Focus
# From research and the evidence this setting is required to 
# resolve the issue with Selenium's moveToElement method.  This method
# is used, in many cases, to "hover" over an element to display a tooltip, 
# show a sub-menu from a context menu, etc. Although the cursor is positioned 
# in the middle of element moved to, and the tooltip, etc is initially displayed,
# it does not persist and additional code to read/manipulate these elements fail. 
ie.require.window.focus=true

# FIREFOX-BROWSER-SPECIFIC PROPERTIES
# Profile name
ff.profile.name=default


# Specifies the number of milliseconds that a WebDriver/Browser findElement(s) call 
# should wait when searching for an element.
# call. 
implicit.wait.in.millis=15000

# Sets the amount of time to wait for an asynchronous script to finish execution
# before throwing an error. If the timeout is negative, then the script will be
# allowed to run indefinitely.
script.timeout.in.millis=60000

# Sets the amount of time to wait for a page load to complete before throwing
# an error. If the timeout is negative, page loads can be indefinite.
pageload.timeout.in.millis=45000

# Sets the number of seconds for wait.until calls. WebDriver/Browser polls the page 
# every 500 milliseconds for up to the timeout value.
wait.until.timeout.in.seconds=20

# Sets the wait mutliplier for slow boxes; 0 to 10
wait.between.user.actions.in.millis=4000