<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:activiti="http://activiti.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath" targetNamespace="http://www.activiti.org/test">
  <process id="fld.monitor.tim.recording" name="TIM recording execution verification" isExecutable="true">
    <startEvent id="start.TIM.recording.verification" name="Start">
      <extensionElements>
        <activiti:formProperty id="node" name="node to run the monitoring" type="string" variable="node" required="true"></activiti:formProperty>
        <activiti:formProperty id="momNode" name="node runing CEM web application" type="string" variable="momNode" default="fldmom01c" required="true"></activiti:formProperty>
        <activiti:formProperty id="hoursRange" name="hoursRange" type="long" variable="hoursRange" default="24" required="true"></activiti:formProperty>
        <activiti:formProperty id="recordingUser" name="recordingUser" type="string" variable="recordingUser" default="cemadmin" required="true"></activiti:formProperty>
        <activiti:formProperty id="cemWebUser" name="cemWebUser" type="string" variable="cemWebUser" required="true"></activiti:formProperty>
        <activiti:formProperty id="cemWebPassword" name="cemWebPassword" type="string" variable="cemWebPassword"></activiti:formProperty>
      </extensionElements>
    </startEvent>
    <scriptTask id="checkTIMRecordings" name="Check TIM recordings" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script>import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import com.ca.apm.systemtest.fld.plugin.selenium.SeleniumPlugin;
import com.ca.apm.systemtest.fld.plugin.selenium.SeleniumPlugin.SelectionBy;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import groovy.transform.Field

@Field def log = LoggerFactory.getLogger("com.ca.apm.systemstest.fld." + execution.getActivityId())

@Field def SimpleDateFormat dateFormat = new SimpleDateFormat("MMM d, yyyy hh:mm a", Locale.US);
dateFormat.setLenient(false);

dashboardManager.configureMonitoredValue(execution, "fld.monitor.tim.recording", "TIM recording execution verification");

SeleniumPlugin seleniumPlugin = agentProxyFactory.createProxy(node).plugins.seleniumPluginPhantomJs;
def sessionId = seleniumPlugin.startSession();
try {
def cemWebBaseUrl = 'http://' + momNode + ':8081/wily/cem/tess/app';
def windowId = seleniumPlugin.openUrl(sessionId, cemWebBaseUrl + '/admin/recordingSessionList.html?pId=1');
def pass = "";
if (binding.variables.containsKey("cemWebPassword")) {
  pass = cemWebPassword;
}

seleniumPlugin.fillTextField(sessionId, windowId, SelectionBy.ID, "loginForm:loginId_userName", cemWebUser);
seleniumPlugin.fillTextField(sessionId, windowId, SelectionBy.ID, "loginForm:loginId_passWord", pass);
seleniumPlugin.submitForm(sessionId, windowId, SelectionBy.ID, "loginForm:loginId_passWord");

seleniumPlugin.waitForElement(sessionId, windowId, SelectionBy.XPATH, "//table[@id = 'recordingSession']", 60);

def list = seleniumPlugin.getText(sessionId, windowId, SelectionBy.XPATH, "//table[@id = 'recordingSession']/tbody/tr/td[2]/a");
log.info('recording link texts: {}', list);

Calendar calendar = Calendar.getInstance();
calendar.add(Calendar.HOUR, -Integer.parseInt(hoursRange.toString()));
Date threshold = calendar.getTime();
int recordingsInRange = 0;
list.each { item -&gt;
  def parts = item.split('@');
  if (! parts[0].equals(recordingUser)) {
    return;
  }
  def dateStr = parts[1];
  def date = dateFormat.parse(dateStr);
  recordingsInRange += date.after(threshold) ? 1 : 0;
};

log.info('found {} recordings', recordingsInRange);
dashboardManager.setMonitoredValue(execution, "fld.monitor.tim.recording", recordingsInRange &gt; 0);

} finally {
try{
seleniumPlugin.closeSession(sessionId);
} catch (e) {}
}

</script>
    </scriptTask>
    <sequenceFlow id="flow1" sourceRef="start.TIM.recording.verification" targetRef="timerintermediatecatchevent1"></sequenceFlow>
    <endEvent id="endevent1" name="End"></endEvent>
    <intermediateCatchEvent id="timerintermediatecatchevent1" name="TimerCatchEvent">
      <timerEventDefinition>
        <timeDuration>PT1S</timeDuration>
      </timerEventDefinition>
    </intermediateCatchEvent>
    <sequenceFlow id="flow6" sourceRef="timerintermediatecatchevent1" targetRef="checkTIMRecordings"></sequenceFlow>
    <sequenceFlow id="flow7" sourceRef="checkTIMRecordings" targetRef="timerintermediatecatchevent2"></sequenceFlow>
    <intermediateCatchEvent id="timerintermediatecatchevent2" name="TimerCatchEvent">
      <timerEventDefinition>
        <timeDuration>PT1S</timeDuration>
      </timerEventDefinition>
    </intermediateCatchEvent>
    <sequenceFlow id="flow8" sourceRef="timerintermediatecatchevent2" targetRef="endevent1"></sequenceFlow>
  </process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_fld.monitor.tim.recording">
    <bpmndi:BPMNPlane bpmnElement="fld.monitor.tim.recording" id="BPMNPlane_fld.monitor.tim.recording">
      <bpmndi:BPMNShape bpmnElement="start.TIM.recording.verification" id="BPMNShape_start.TIM.recording.verification">
        <omgdc:Bounds height="35.0" width="35.0" x="20.0" y="110.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="checkTIMRecordings" id="BPMNShape_checkTIMRecordings">
        <omgdc:Bounds height="65.0" width="105.0" x="170.0" y="95.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endevent1" id="BPMNShape_endevent1">
        <omgdc:Bounds height="35.0" width="35.0" x="430.0" y="110.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="timerintermediatecatchevent1" id="BPMNShape_timerintermediatecatchevent1">
        <omgdc:Bounds height="35.0" width="35.0" x="90.0" y="110.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="timerintermediatecatchevent2" id="BPMNShape_timerintermediatecatchevent2">
        <omgdc:Bounds height="35.0" width="35.0" x="340.0" y="110.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge bpmnElement="flow1" id="BPMNEdge_flow1">
        <omgdi:waypoint x="55.0" y="127.0"></omgdi:waypoint>
        <omgdi:waypoint x="90.0" y="127.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow6" id="BPMNEdge_flow6">
        <omgdi:waypoint x="125.0" y="127.0"></omgdi:waypoint>
        <omgdi:waypoint x="170.0" y="127.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow7" id="BPMNEdge_flow7">
        <omgdi:waypoint x="275.0" y="127.0"></omgdi:waypoint>
        <omgdi:waypoint x="340.0" y="127.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow8" id="BPMNEdge_flow8">
        <omgdi:waypoint x="375.0" y="127.0"></omgdi:waypoint>
        <omgdi:waypoint x="430.0" y="127.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</definitions>